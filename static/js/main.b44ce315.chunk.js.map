{"version":3,"sources":["hooks/useLocalStorage.js","constants.js","helpers.js","components/TodoSearch.js","components/Badge.js","components/TodoFilters.js","components/TodoEdit.js","components/TodoListItem.js","components/TodoCreate.js","components/TodoList.js","components/App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","defaultValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","state","setState","newValue","valueToUpdate","Function","setItem","stringify","statuses","filterTodos","todos","filters","query","toLowerCase","map","todo","title","includes","include","status","tag","tags","find","t","value","nextStatus","currentStatus","currentStatusIndex","findIndex","stat","length","TodoSearch","setFilters","className","Input","id","onChange","e","target","placeholder","required","MyBadge","styled","StrapBadge","props","onClick","colors","Pending","Completed","Badge","color","rest","FiltersPreview","Object","keys","TodoFilters","showFilters","setShowFilters","filterStatus","filterTags","isSelected","type","val","style","marginBottom","marginLeft","Button","borderRadius","Collapse","isOpen","opacity","undefined","s","MyLabel","children","Label","TodoEdit","saveTodo","toggle","autosave","setAutosave","recordLoaded","setRecordLoaded","titleInput","useRef","throttledSave","throttle","newState","dismiss","useEffect","current","focus","updateTodo","field","handleInputChange","name","Modal","centered","ModalHeader","ModalBody","Form","onSubmit","preventDefault","FormGroup","for","autoFocus","innerRef","description","Row","Col","selected","dueDate","date","minDate","Date","isMulti","options","check","checked","checkmarkColors","Checkmark","div","ClickableListItem","ListGroupItem","TodoCheckmark","memo","onRemove","onEdit","toggleStatus","stopPropagation","moment","fromNow","close","FormWrapper","TodoCreate","createTodo","setTitle","InputGroup","data-testid","InputGroupAddon","addonType","BlankState","TodoList","reorderTodo","removeTodo","editTodo","TodoListContent","filter","index","nodeSelector","handleSelector","onDragEnd","ListGroup","Wrapper","Container","App","rawTodos","setTodos","todoToEdit","setTodoToEdit","normalizeTodos","Set","forEach","add","values","sort","label","distinctTags","onSave","newTodo","todoToAdd","uuidv4","fromIndex","toIndex","data","splice","indexToRemove","_","indexToEdit","indexToToggle","currentTodo","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b44ce315.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useLocalStorage(key, defaultValue) {\n  // State to store value\n  const [state, setState] = useState(() => {\n    try {\n      // Get value from local storage\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      console.error(error);\n      return defaultValue;\n    }\n  });\n\n  // Create setter function\n  const setValue = (newValue) => {\n    try {\n      // Copy API from useState to allow function to set value\n      const valueToUpdate =\n        newValue instanceof Function ? newValue(state) : newValue;\n      // Store in local state\n      setState(valueToUpdate);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToUpdate));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [state, setValue];\n}\n\nexport default useLocalStorage;\n","export const statuses = ['Pending', 'In Progress', 'Completed'];\n","import { statuses } from './constants';\n\n/**\n * Extracts used tags from todos and returns list of distinct tags\n * @param {Array} todos Todos to extract distinct tags from\n * @returns {Array} Selectable options for select fields\n */\nexport const distinctTags = (todos) => {\n  const tags = new Set();\n  todos.forEach((t) => {\n    if (t && t.tags) {\n      t.tags.forEach((tag) => tags.add(tag.value));\n    }\n  });\n  return [...tags.values()].sort().map((value) => ({ value, label: value }));\n};\n\n/**\n * Helper function to normalize todo fields\n * @param {Array} todos Todos to normalize\n * @returns {Array} Todos with fields parsed\n */\nexport const normalizeTodos = (todos) =>\n  todos.map((todo) => ({\n    ...todo,\n    dueDate: todo.dueDate ? new Date(todo.dueDate) : undefined,\n  }));\n\n/**\n * Filters todos based on a filter object\n * @param {Array} todos Todos to filter\n * @param {Object} filters Filters to apply to todos\n */\nexport const filterTodos = (todos, filters = {}) => {\n  const query = filters.query ? filters.query.toLowerCase() : null;\n  return todos.map((todo) => {\n    // Must include search query if present\n    if (query && !todo.title.toLowerCase().includes(query)) {\n      return { ...todo, include: false };\n    }\n    // Must have the right status if filtering by status\n    if (\n      filters.status &&\n      filters.status !== todo.status &&\n      (filters.status !== 'Not Completed' || todo.status === 'Completed')\n    ) {\n      return { ...todo, include: false };\n    }\n    // Must include the right tag if filtering by tag\n    if (\n      filters.tag &&\n      !(todo.tags || []).find((t) => t.value === filters.tag)\n    ) {\n      return { ...todo, include: false };\n    }\n    // Otherwise include it\n    return { ...todo, include: true };\n  });\n};\n\n/**\n * Finds next status in status array\n * @param {String} currentStatus Current status\n * @returns {String} next status to set todo to\n */\nexport const nextStatus = (currentStatus) => {\n  const currentStatusIndex = statuses.findIndex(\n    (stat) => currentStatus === stat\n  );\n  return statuses[(currentStatusIndex + 1) % statuses.length];\n};\n","import React from 'react';\nimport { Input } from 'reactstrap';\n\nexport default function TodoSearch({ filters, setFilters, tags }) {\n  const filterSearch = (query) =>\n    setFilters({\n      ...filters,\n      query,\n    });\n\n  return (\n    <div className=\"my-3\">\n      <Input\n        id=\"search-bar\"\n        onChange={(e) => filterSearch(e.target.value)}\n        value={filters?.query}\n        placeholder=\"Search tasks\"\n        required\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Badge as StrapBadge } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst MyBadge = styled(StrapBadge)`\n  cursor: ${(props) => (props.onClick ? 'pointer' : 'inherit')};\n`;\n\nconst colors = {\n  Pending: 'dark',\n  'In Progress': 'primary',\n  Completed: 'success',\n};\n\nexport default function Badge({ status, color, ...rest }) {\n  return (\n    <MyBadge color={color || colors[status]} {...rest}>\n      {status}\n    </MyBadge>\n  );\n}\n","import React, { useState } from 'react';\nimport { Collapse, Button } from 'reactstrap';\n\nimport { statuses } from '../constants';\n\nimport Badge from './Badge';\n\nconst FiltersPreview = ({ filters }) => {\n  if (!filters || Object.keys(filters).length === 0) return <></>;\n  return (\n    <div className=\"d-inline-block ml-3 vertical-align-center\">\n      {filters.status && (\n        <span>\n          Status: <Badge className=\"mr-2\" status={filters.status} />\n        </span>\n      )}\n      {filters.tag && (\n        <span>\n          Tag: <Badge className=\"mr-2\" status={filters.tag} />\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default function TodoFilters({ filters, setFilters, tags }) {\n  const [showFilters, setShowFilters] = useState(false);\n\n  const toggle = () => setShowFilters(!showFilters);\n\n  const filterStatus = (status) =>\n    setFilters({\n      ...filters,\n      status,\n    });\n\n  const filterTags = (tag) => {\n    setFilters({\n      ...filters,\n      tag,\n    });\n  };\n\n  const isSelected = (type, val) => !filters[type] || filters[type] === val;\n\n  return (\n    <div className=\"fixed-bottom\">\n      <div style={{ marginBottom: '1rem', marginLeft: '1rem' }}>\n        <Button\n          color=\"secondary\"\n          onClick={toggle}\n          style={{\n            borderRadius: '100px',\n          }}>\n          {showFilters ? 'Hide' : 'Show'} Filters\n        </Button>{' '}\n        <FiltersPreview filters={filters} />\n      </div>\n      <Collapse\n        isOpen={showFilters}\n        className=\"py-3 bg-secondary text-white\"\n        style={{ opacity: 0.9 }}>\n        <div className=\"my-3 text-center\">\n          Status:{' '}\n          <Badge\n            className=\"mr-2\"\n            color=\"light\"\n            status={'All'}\n            onClick={() => filterStatus(undefined)}\n          />\n          {statuses.map((s) => (\n            <Badge\n              key={s}\n              className=\"mr-2\"\n              status={s}\n              color={isSelected('status', s) ? undefined : 'light'}\n              onClick={() => filterStatus(s)}\n            />\n          ))}\n          <Badge\n            className=\"mr-2\"\n            status={'Not Completed'}\n            color={isSelected('status', 'Not Completed') ? 'info' : 'light'}\n            onClick={() => filterStatus('Not Completed')}\n          />\n        </div>\n        {tags && tags.length > 0 && (\n          <div className=\"my-3 text-center\">\n            Tags:{' '}\n            <Badge\n              className=\"mr-2\"\n              color={!filters.tag ? 'dark' : 'light'}\n              status={'All'}\n              onClick={() => filterTags(undefined)}\n            />\n            {tags.map(({ value }) => (\n              <Badge\n                key={value}\n                className=\"mr-2\"\n                status={value}\n                color={\n                  filters.tag && isSelected('tag', value) ? 'dark' : 'light'\n                }\n                onClick={() => filterTags(value)}\n              />\n            ))}\n          </div>\n        )}\n      </Collapse>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport CreatableSelect from 'react-select/creatable';\nimport throttle from 'lodash.throttle';\n\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nimport { statuses } from '../constants';\n\nconst MyLabel = ({ required = false, children, ...rest }) => (\n  <Label {...rest}>\n    {children}\n    {required && <span className=\"text-danger ml-1\">*</span>}\n  </Label>\n);\n\nexport default function TodoEdit({ saveTodo, todo, toggle, tags }) {\n  const [autosave, setAutosave] = useLocalStorage('cg-autosave', true);\n  const [state, setState] = useState();\n  const [recordLoaded, setRecordLoaded] = useState(false);\n\n  const titleInput = useRef();\n\n  const autosaveDelay = 500; // Only allow saves every N ms\n  const throttledSave = throttle(\n    (newState) => saveTodo(newState, { dismiss: false }),\n    autosaveDelay\n  );\n\n  useEffect(() => {\n    // Set state from todo param\n    if (todo) {\n      setState(todo);\n      setRecordLoaded(false);\n    }\n  }, [todo]);\n\n  useEffect(() => {\n    // Focus on first input the first time state changes\n    if (!recordLoaded && titleInput.current) {\n      titleInput.current.focus();\n      setRecordLoaded(true);\n    }\n  }, [recordLoaded, state]);\n\n  // Helper function to save changes\n  const onSubmit = (e) => {\n    e.preventDefault();\n    saveTodo(state);\n  };\n\n  // Helper function to update state\n  const updateTodo = (field, value) => {\n    const newState = {\n      ...state,\n      [field]: value,\n    };\n    setState(newState);\n    if (autosave) {\n      throttledSave(newState);\n    }\n  };\n  // Helper function to update state from input\n  const handleInputChange = (e) => updateTodo(e.target.name, e.target.value);\n\n  return (\n    <Modal centered isOpen={!!todo} toggle={toggle}>\n      <ModalHeader className=\"bg-primary text-white\" toggle={toggle}>\n        {state?.title || 'Edit Todo'}\n      </ModalHeader>\n      <ModalBody>\n        <Form onSubmit={onSubmit}>\n          <FormGroup>\n            <MyLabel required for=\"form-title\">\n              Title\n            </MyLabel>\n            <Input\n              id=\"form-title\"\n              name=\"title\"\n              autoFocus\n              onChange={handleInputChange}\n              value={state?.title}\n              innerRef={titleInput}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <MyLabel for=\"form-description\">Description</MyLabel>\n            <Input\n              type=\"textarea\"\n              name=\"description\"\n              id=\"form-description\"\n              onChange={handleInputChange}\n              value={state?.description}\n            />\n          </FormGroup>\n          <Row>\n            <Col>\n              <FormGroup>\n                <MyLabel required for=\"form-status\">\n                  Status\n                </MyLabel>\n                <Input\n                  id=\"form-status\"\n                  required\n                  type=\"select\"\n                  name=\"status\"\n                  onChange={handleInputChange}\n                  value={state?.status}>\n                  {statuses.map((s) => (\n                    <option key={s}>{s}</option>\n                  ))}\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <MyLabel for=\"form-date\" className=\"d-block\">\n                  Due Date\n                </MyLabel>\n                <DatePicker\n                  selected={state?.dueDate}\n                  onChange={(date) => updateTodo('dueDate', date)}\n                  minDate={new Date()}\n                  className=\"form-control\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <MyLabel for=\"form-tags\" className=\"d-block\">\n              Tags\n            </MyLabel>\n            <CreatableSelect\n              id=\"form-tags\"\n              isMulti\n              onChange={(options) => updateTodo('tags', options)}\n              value={state?.tags}\n              options={tags}\n            />\n          </FormGroup>\n          <Row>\n            <Col>{!autosave && <Button color=\"primary\">Save</Button>}</Col>\n            <Col>\n              <FormGroup check className=\"my-2 text-right\">\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    checked={autosave}\n                    onChange={(e) => setAutosave(e.target.checked)}\n                  />{' '}\n                  Autosave changes?\n                </Label>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </ModalBody>\n    </Modal>\n  );\n}\n","import React, { memo } from 'react';\nimport { ListGroupItem, Button } from 'reactstrap';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst checkmarkColors = {\n  Pending: 'none',\n  'In Progress': '#dae4ed',\n  Completed: '#223344',\n};\n\nconst Checkmark = styled.div`\n  width: 30px;\n  height: 30px;\n  display: inline-block;\n  border-radius: 15px;\n  border: 2px solid #223344;\n  vertical-align: middle;\n  margin-right: 15px;\n  text-align: center;\n  color: white;\n  background-color: ${(props) => checkmarkColors[props.status] || 'none'};\n`;\n\nconst ClickableListItem = styled(ListGroupItem)`\n  cursor: pointer;\n`;\n\nconst TodoCheckmark = memo(({ status, toggle }) =>\n  status === 'Completed' ? (\n    <Checkmark status={status} onClick={toggle}>\n      ✓\n    </Checkmark>\n  ) : (\n    <Checkmark status={status} onClick={toggle} />\n  )\n);\n\nexport default memo(function TodoListItem({\n  todo,\n  onRemove,\n  onEdit,\n  toggleStatus,\n}) {\n  const removeTask = (e) => {\n    e.stopPropagation();\n    onRemove();\n  };\n  const toggleTaskStatus = (e) => {\n    e.stopPropagation();\n    toggleStatus();\n  };\n  return (\n    <ClickableListItem\n      onClick={onEdit}\n      className={`todo-item ${todo?.include ? 'd-block' : 'd-none'}`}>\n      <TodoCheckmark\n        status={todo.status}\n        toggle={toggleTaskStatus}\n        className=\"noselect\"\n      />\n      <span className=\"align-middle\">\n        {todo.title}{' '}\n        <span className=\"text-muted\">\n          {todo.dueDate && `due ${moment(todo.dueDate).fromNow()}`}\n        </span>\n      </span>\n      <Button onClick={removeTask} close />\n    </ClickableListItem>\n  );\n});\n","import React, { useState } from 'react';\nimport {\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Form,\n  ListGroupItem,\n} from 'reactstrap';\nimport styled from 'styled-components';\n\nconst FormWrapper = styled(ListGroupItem)`\n  padding: 0.5rem;\n`;\n\nexport default function TodoCreate({ createTodo }) {\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title && title !== '') {\n      createTodo({ title, status: 'Pending' });\n      setTitle('');\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Form onSubmit={handleSubmit}>\n        <InputGroup>\n          <Input\n            id=\"form-title\"\n            data-testid=\"create-title\"\n            name=\"title\"\n            className=\"no-border\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            placeholder=\"New task\"\n            required\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button color=\"link\">+ Add Task</Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </Form>\n    </FormWrapper>\n  );\n}\n","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport ReactDragListView from 'react-drag-listview';\n\nimport TodoListItem from './TodoListItem';\nimport TodoCreate from './TodoCreate';\n\nconst BlankState = () => (\n  <ListGroupItem className=\"text-muted py-3\">\n    Create your first todo below!\n  </ListGroupItem>\n);\n\nexport default function TodoList({\n  createTodo,\n  todos = [],\n  reorderTodo,\n  removeTodo,\n  editTodo,\n  toggleStatus,\n}) {\n  const TodoListContent = () =>\n    !todos || todos.filter((t) => t.include).length === 0 ? (\n      <BlankState />\n    ) : (\n      todos.map((todo, index) => (\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          onEdit={() => editTodo(index)}\n          onRemove={() => removeTodo(index)}\n          toggleStatus={() => toggleStatus(index)}\n        />\n      ))\n    );\n\n  return (\n    <ReactDragListView\n      nodeSelector=\".todo-item\"\n      handleSelector=\".todo-item\"\n      onDragEnd={reorderTodo}>\n      <ListGroup>\n        <TodoListContent />\n        <TodoCreate createTodo={createTodo} />\n      </ListGroup>\n    </ReactDragListView>\n  );\n}\n","import React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\n\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nimport {\n  distinctTags,\n  normalizeTodos,\n  filterTodos,\n  nextStatus,\n} from '../helpers';\n\nimport TodoSearch from './TodoSearch';\nimport TodoFilters from './TodoFilters';\nimport TodoEdit from './TodoEdit';\nimport TodoList from './TodoList';\n\nconst Wrapper = styled(Container)`\n  max-width: 600px;\n  margin-bottom: 200px;\n`;\n\nfunction App() {\n  // State values\n  const [rawTodos, setTodos] = useLocalStorage('cg-todos', []);\n  const [todoToEdit, setTodoToEdit] = useState();\n  const [filters, setFilters] = useLocalStorage('cg-filtes', {\n    status: 'Not Completed',\n  });\n\n  // Parse todos and tags from state\n  const todos = normalizeTodos(rawTodos);\n  const tags = distinctTags(todos);\n\n  // Functions to remove and edit todos\n  const onRemove = (indexToRemove) =>\n    setTodos(todos.filter((_, index) => index !== indexToRemove));\n  const onStartEdit = (indexToEdit) => setTodoToEdit(todos[indexToEdit]);\n  const onToggleStatus = (indexToToggle) => {\n    const currentTodo = todos[indexToToggle];\n    onSave(\n      {\n        ...currentTodo,\n        status: nextStatus(currentTodo.status),\n      },\n      { dismiss: false }\n    );\n  };\n  const onReorder = (fromIndex, toIndex) => {\n    const data = [...todos];\n    const item = data.splice(fromIndex, 1)[0];\n    data.splice(toIndex, 0, item);\n    setTodos(data);\n  };\n\n  // Save new todo\n  const onSave = (newTodo, { dismiss = true } = {}) => {\n    if (newTodo && newTodo.id) {\n      // Update existing value\n      setTodos(todos.map((todo) => (todo.id === newTodo.id ? newTodo : todo)));\n      if (dismiss) {\n        setTodoToEdit(undefined);\n      }\n    } else {\n      // Add to the end of the array\n      const todoToAdd = { id: uuidv4(), ...newTodo };\n      setTodos([...todos, todoToAdd]);\n      setTodoToEdit(todoToAdd);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h1 className=\"text-center my-4\">My Tasks</h1>\n      <TodoSearch filters={filters} setFilters={setFilters} />\n      <TodoList\n        todos={filterTodos(todos, filters)}\n        reorderTodo={onReorder}\n        createTodo={onSave}\n        removeTodo={onRemove}\n        editTodo={onStartEdit}\n        toggleStatus={onToggleStatus}\n      />\n      <TodoEdit\n        saveTodo={onSave}\n        todo={todoToEdit}\n        toggle={() => setTodoToEdit(undefined)}\n        tags={tags}\n      />\n      <TodoFilters filters={filters} setFilters={setFilters} tags={tags} />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}